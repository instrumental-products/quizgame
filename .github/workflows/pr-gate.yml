name: PR gate (require approved discussion or open bug issue)

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  pull-requests: write
  issues: read
  contents: read

jobs:
  require-link:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR links & labels
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request
            const body = (pr.body || "") + " " + (pr.title || "")
            const refs = [...body.matchAll(/#(\d+)/g)].map(m => Number(m[1]))
            if (refs.length === 0) {
              core.setFailed("No linked Issue/Discussion reference (e.g., Closes #123).")
              return
            }
            const octo = github.getOctokit(process.env.GITHUB_TOKEN)

            let ok = false
            for (const num of refs) {
              try {
                // Try as Issue first
                const { data: issue } = await octo.rest.issues.get({
                  owner: context.repo.owner, repo: context.repo.repo, issue_number: num
                })
                const isPR = !!issue.pull_request
                if (!isPR) {
                  const labels = (issue.labels || []).map(l => typeof l === 'string' ? l : l.name)
                  const isOpenBug = issue.state === 'open' && labels.includes('bug')
                  if (isOpenBug) { ok = true; break }
                }
              } catch {}
              try {
                // Try as Discussion
                const { data: disc } = await octo.rest.discussions.getDiscussion({
                  owner: context.repo.owner, repo: context.repo.repo, discussion_number: num
                })
                // we consider "approved" label via discussion labels (GitHub supports labels for discussions)
                const labels = (disc.labels || []).map(l => l.name)
                const approved = labels.includes('approved')
                if (approved) { ok = true; break }
              } catch {}
            }
            if (!ok) core.setFailed("No approved Discussion or open bug Issue found among linked refs.")

      - name: Enforce PR template sections
        if: success() || failure()
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request
            const body = (pr.body || "").toLowerCase()
            const hasSummary = body.includes("## summary")
            const hasChecklist = body.includes("## checklist")
            const hasSteps = body.includes("documented steps to test")
            if (!(hasSummary && hasChecklist && hasSteps)) {
              core.setFailed("PR template sections missing (Summary / Checklist / Steps to test).")

      - name: Auto-close if requirements not met
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat <<'MSG'
          Thanks for the PR! For focus, we only review PRs that meet our contribution requirements:

          • Link to an **open `bug` Issue** *or* a **Discussion** labeled **`approved`**.  
          • Include required template sections: **Summary**, **Checklist**, and **Documented steps to test**.  
          • New feature PRs must originate from an **approved** Discussion.

          Policy: `.github/CONTRIBUTING.md` → Pull Requests

          Closing for now—happy to revisit once aligned. 🙏
          MSG
          )"
          gh pr close ${{ github.event.pull_request.number }}
